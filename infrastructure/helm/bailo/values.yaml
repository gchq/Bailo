# Default values for bailo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Bailo image location
image:
  frontendRepository: "frontend-image-registry.location"
  frontendTag: imageTag
  backendRepository: "backend-image-registry.location"
  backendTag: imageTag
  pullPolicy: IfNotPresent
imagePullSecrets: []

# non-identifying metadata
podAnnotations: {}

# Instance scaling
# ReplicateCount ignored if autoscaling is enabled
replicaCount: 1
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80 # hpa configuration
  targetMemoryUtilizationPercentage: 80 # hpa configuration

# Pod Security settings
podSecurityContext:
  {}
  # fsGroup: 2000
securityContext:
  # capabilities:
  #   drop:
  #     - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  # runAsUser: 1002380001

# Networking
# Ingress/route implementation. Also, see appPublicRoute below.
service:
  type: ClusterIP
  frontendPort: 3000
  backendPort: 3001

# k8s | aws config
ingress:
  enabled: false
  name: "nginx"
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true
  fqdn: "example.com"
  path: "/"
  pathType: "Prefix"
  service:
    name: "node-port"
    port: 8080

# Used for OpenShift
route:
  enabled: false # false for k8s | aws
  appPublicRoute: "route-url" # can also be used for aws loadbalancer url

# Oauth | Congnito
# using bash for generating cookie secret example
# dd if=/dev/urandom bs=32 count=1 2>/dev/null | base64 | tr -d -- '\n' | tr -- '+/' '-_'; echo
cookie:
  secret: "somerandomstring12341234567890AB"
oauth:
  enabled: false
  origin: "bailo fqdn"
  cognito:
    key: "cognito app client id"
    secret: "cognito app client secret"
    dynamic: [] # example 'scope'
    response: [] #example 'tokens', 'raw', 'jwt'
    callback: "" # exmaple /
    subdomain: "cognito domain"
  identityProviderClient:
    userPoolId: "region_id"
    userIdAttribute: "name"

# Used for aws storage
aws:
  enabled: false
  storageName: "sc-gp2"
  pvcMinioName: "bailo-minio"
  pvcMinioStorage: 20Gi
  pvcMongoName: "bailo-mongodb"
  pvcMongoStorage: 10Gi
  pvcClamAVName: "bailo-clamav"
  pvcClamAVStorage: 5Gi

# Pod resource
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 400m
    memory: 800Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  backend:
    limits:
      cpu: 400m
      memory: 800Mi

# Pod placement
nodeSelector: {}
tolerations: []
affinity: {}

# Mongo Dependencies
mongodb:
  enabled: true
  ssl: false
  sslValidate: false
  host: "" # serviceName:mongoport/collectioname or serviceName-headless:mongoport/collectionname for mongodb replicaset. see template/_helper.tpl and templates/bailo/bailo.configmap.yaml.
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false #Rediness probe failed: /bitnami/scripts/readiness-probe.sh: line 9: mongosh: command not found
  auth:
    rootUser: ""
    rootPassword: ""
    replicaSetKey: ""
    #existingSecret: "bailo-mongodb" # HELM generated Secret name. Uncomment Mongo Secret details from bailo.secret.yaml for dynamic password configuration.
    usernames: [bailo_user] # defined user for database connection. required for ConfigMap bailo-config
    passwords: [] # required for ConfigMap bailo-config
    databases: [bailo] # defined database for Mongo
  service:
    port: 27017
  collectionName: bailo # Collection name in Mongo
  persistence:
    #enabled: false # Required for aws. EKS is not able to handle dynamic creation of PVC using this helm chart. Instead /templates/storage.yaml handles eks storage. Stoage is not removed when deployed mongodb is removed.
    size: 10Gi
  containerSecurityContext:
    enabled: false
  podSecurityContext:
    enabled: false
  image:
    registry: docker.io
    repository: bitnami/mongodb
    tag: 7.0.8-debian-12-r2

# MinIO Dependencies
minio:
  enabled: true
  mode: standalone
  auth:
    enable: true
    rootUser: ""
    rootPassword: ""
    existingSecret: "bailo-minio" # Helm generated Secret
  defaultBuckets: "uploads,registry"
  createBuckets: "false" # attempt to create buckets
  uploadBucket: uploads # required for Bailo
  registryBucket: registry # required for Bailo
  host: "bailo-minio"
  service:
    ports:
      api: 31111 # default 9000
  useSSL: false
  persistence:
    #enabled: false # Required for aws. EKS is not able to handle dynamic creation of PVC using this helm chart. Instead /templates/storage.yaml handles eks storage. Stoage is not removed when deployed minio is removed.
    size: 20Gi
  containerSecurityContext:
    enabled: false
  podSecurityContext:
    enabled: false
  region: ignored-for-minio
  partSizeMB: 64
  image:
    registry: docker.io
    repository: bitnami/minio
    tag: 2024.4.18-debian-12-r0
    debug: true

# Registry Dependencies
registry:
  repository: registry
  tag: 3.0.0-alpha.1
  enabled: true
  protocol: "https"
  #host: "bailo-registry" # service name
  port: 5000 # default 5000
  insecure: "true"
  certDir: "/certs"
  certFile: cert.pem #use san.cnf to create certs
  jwksFile: jwks.json
  keyFile: key.pem
  serviceAccount: ''

# Nginx Dependencies
nginxAuth:
  repository: nginxinc/nginx-unprivileged # runs Nginx as non-root unrivileged user.
  tag: latest
  #host: "bailo-nginx" # service name
  port: 8080
  #certDir: "/certs"
  #certFile: "tls.crt"
  #keyFile: "tls.key"

# Mail
mail:
  enabled: true

# Openshift specific configuration
openshift:
  namespace: openshift-project
  dockerPushSecretName: "registry-push-secret"
  termination: edge

# Instance Settings
config:
  ui:
    banner:
      enabled: false
      text: "BAILO"
      colour: "#047a06"
      textColor: "black"

    announcement:
      enabled: false
      text: ''
      startTimestamp: ''

  smtp:
    #host: 'mail' #service name
    port: 1025
    secure: false
    rejectUnauthorized: false
    user: "mailuser"
    pass: "mailpass"
    from: "bailo@example.com"

  app:
    protocol: "https"
    port: 443

# nginx.deployment registry.deployment
nginxcert:
  cert: cert.pem #use san.cnf to create certs
  key: key.pem

connectors:
  authentication:
    kind: 'silly'

  authorisation:
    kind: 'basic'

  audit:
    kind: 'silly'

instrumentation:
  enabled: false
  debug: false

modelMirror:
  enabled: false
  disclaimer: '## Example Agreement \n I agree that this model is suitable for exporting'
  export:
    kmsSignature:
      enabled: false
      keyId: '123'
      KMSClient:
        region: 'eu-west-1'
        accessKey: ''
        secretKey: ''
# Inferencing cluster reference
inference:
  enabled: false
  # Url for the inferencing cluster
  host: 'https://example.com'
  gpus:
  authorizationTokenName: 'inferencing-token'
  authorisationToken: ''

backend:
  serviceAccount: ''

clamav:
  enabled: false
  image: clamav/clamav:latest_base # https://docs.clamav.net/manual/Installing/Docker.html#the-official-images-on-docker-hub
  port: 3310
